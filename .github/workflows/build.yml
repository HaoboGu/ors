name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  RUST_LOG: onnxruntime=debug,onnxruntime-sys=debug
  RUST_BACKTRACE: 1

jobs:
  rustfmt:
    name: Run rustfmt
    runs-on: ubuntu-lastest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  build:
    name: Build ors on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, x86_64-apple-darwin, x86_64-pc-windows-msvc]
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    env:
      CARGO_BUILD_TARGET: ${{ matrix.target }}
    steps:
    - name: Install LLVM and Clang on Windows # required for bindgen to work, see https://github.com/rust-lang/rust-bindgen/issues/1797
      uses: KyleMayes/install-llvm-action@v1.5.0
      if: matrix.os == 'windows-latest'
      with:
        version: "11.0"
        directory: ${{ runner.temp }}/llvm
    - name: Set LIBCLANG_PATH on Windows
      run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV
      if: matrix.os == 'windows-latest'
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        target: ${{ matrix.target }}
        override: true
    - name: Cargo Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --all
      